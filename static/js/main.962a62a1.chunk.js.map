{"version":3,"sources":["APIStore.js","appContext.js","HeaderButtons/index.js","Curriculum/svg/right-arrow.svg","Curriculum/svg/left-arrow.svg","Curriculum/svg/move.svg","Curriculum/svg/trash.svg","Curriculum/index.js","App.js","serviceWorker.js","index.js"],"names":["store","subject","children","childrenAllIdsOrder","MyContext","React","createContext","ContextWrapper","useState","state","setState","Provider","value","handleIndent","chapterId","headingId","subHeadingId","newState","alert","name","getPreviousHeadingOrder","findIndex","id","takeAllHeadingIds","splice","length","previousHeadId","i","newchildrenAllIdsOrder","filter","getAllCurrentChapterId","getBeforeChapterIndex","getBeforeChapterId","childNamesOfHeading","handleOutdent","findSubheadingIndex","extractRemainingSubHeadingIds","subHeadingChildren","findSubheadingIndexDelete","getHeadingIndex","findHeadingIndex","slicingChildren","slice","shift","getChapterIndex","HandleChangeStandard","event","subheadingId","target","trashStandard","addStandard","currentStandard","newStandard","newId","Math","random","getLastChapterId","getLastHeadingId","getLastHeadingChildren","getJSONData","data","triggerDragDrop","dragIds","dropIds","getDragChapterIndex","getDropChapterIndex","swapId","getDraggedHeading","findIndexOfDragHeading","getDropElementHeadingIndex","getDraggedSubChild","findIndexOfDragSubheading","getDropElementSubheadingIndex","className","HeaderButtons","getConsumer","useContext","handleFileChange","e","a","files","endsWith","preventDefault","reader","FileReader","onload","text","result","JSON","parse","readAsText","htmlFor","type","style","display","onChange","href","encodeURIComponent","stringify","download","Index","currentIndent","setCurrentIndent","setNewStandard","dragOverIds","setDragOverIds","dragStartIds","setDragStartIds","chapter","chapterAllIds","handleDragOverIds","ids","handleDragDropStartIds","dragDropEndHandler","setMarginLeft","standardType","map","heading","headingAllIds","onDragOver","src","Move","alt","onDragStart","onDragEnd","LeftArrow","onClick","RightArrow","Trash","marginLeft","subHeadingAllIds","subHeading","Fragment","onSubmit","placeholder","required","autoFocus","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.962a62a1.chunk.js","sourcesContent":["export const store = {\r\n    subject: \"Mathematics\",\r\n    children: {\r\n    },\r\n    childrenAllIdsOrder: [],\r\n  };\r\n  ","import { store } from \"./APIStore\";\r\nimport React, { useState } from \"react\";\r\nexport const MyContext = React.createContext();\r\n\r\nexport default function ContextWrapper({ children }) {\r\n  const [state, setState] = useState(store);\r\n\r\n  const getJSONData = (data) => {\r\n    setState({ ...data });\r\n  };\r\n\r\n  const triggerDragDrop = (dragIds, dropIds) => {\r\n    const newState = state;\r\n    if (dragIds.length === 1) {\r\n      const getDragChapterIndex = newState.childrenAllIdsOrder.findIndex(\r\n        (id) => id === dragIds[0]\r\n      );\r\n\r\n      const getDropChapterIndex = newState.childrenAllIdsOrder.findIndex(\r\n        (id) => id === dropIds[0]\r\n      );\r\n\r\n      const swapId = newState.childrenAllIdsOrder.splice(\r\n        getDragChapterIndex ,\r\n        1\r\n      );\r\n\r\n      newState.childrenAllIdsOrder.splice(\r\n        getDropChapterIndex ,\r\n        0,\r\n        ...swapId\r\n      );\r\n    } else if (dragIds.length === 2) {\r\n      const getDraggedHeading =\r\n        newState.children[dragIds[0]].children[dragIds[1]];\r\n\r\n      delete newState.children[dragIds[0]].children[dragIds[1]];\r\n      const findIndexOfDragHeading = newState.children[\r\n        dragIds[0]\r\n      ].childrenAllIdsOrder.findIndex((id) => id === dragIds[1]);\r\n      newState.children[dragIds[0]].childrenAllIdsOrder.splice(\r\n        findIndexOfDragHeading,\r\n        1\r\n      );\r\n\r\n      const getDropElementHeadingIndex = newState.children[\r\n        dropIds[0]\r\n      ].childrenAllIdsOrder.findIndex((id) => id === dropIds[1]);\r\n      newState.children[dropIds[0]].childrenAllIdsOrder.splice(\r\n        getDropElementHeadingIndex,\r\n        0,\r\n        dragIds[1]\r\n      );\r\n      newState.children[dropIds[0]].children[dragIds[1]] = {\r\n        ...getDraggedHeading,\r\n      };\r\n    } else if (dragIds.length === 3) {\r\n      const getDraggedSubChild =\r\n        newState.children[dragIds[0]].children[dragIds[1]].children[dragIds[2]];\r\n\r\n      delete newState.children[dragIds[0]].children[dragIds[1]].children[\r\n        dragIds[2]\r\n      ];\r\n\r\n      const findIndexOfDragSubheading = newState.children[dragIds[0]].children[\r\n        dragIds[1]\r\n      ].childrenAllIdsOrder.findIndex((id) => id === dragIds[2]);\r\n\r\n      newState.children[dragIds[0]].children[\r\n        dragIds[1]\r\n      ].childrenAllIdsOrder.splice(findIndexOfDragSubheading, 1);\r\n\r\n      const getDropElementSubheadingIndex = newState.children[\r\n        dropIds[0]\r\n      ].children[dropIds[1]].childrenAllIdsOrder.findIndex(\r\n        (id) => id === dropIds[2]\r\n      );\r\n\r\n      newState.children[dropIds[0]].children[\r\n        dropIds[1]\r\n      ].childrenAllIdsOrder.splice(\r\n        getDropElementSubheadingIndex,\r\n        0,\r\n        dragIds[2]\r\n      );\r\n\r\n      newState.children[dropIds[0]].children[dropIds[1]].children[\r\n        dragIds[2]\r\n      ] = {\r\n        name: getDraggedSubChild.name,\r\n      };\r\n    }\r\n\r\n    setState({ ...state });\r\n  };\r\n\r\n  const HandleChangeStandard = (event, chapterId, headingId, subheadingId) => {\r\n    const newState = state;\r\n    const { value } = event.target;\r\n\r\n    if (chapterId && headingId && subheadingId) {\r\n      newState.children[chapterId].children[headingId].children[\r\n        subheadingId\r\n      ].name = value;\r\n    } else if (chapterId && headingId) {\r\n      newState.children[chapterId].children[headingId].name = value;\r\n    } else if (chapterId) {\r\n      newState.children[chapterId].name = value;\r\n    }\r\n\r\n    setState({ ...newState });\r\n  };\r\n\r\n  const trashStandard = (chapterId, headingId, subheadingId) => {\r\n    const newState = state;\r\n\r\n    if (chapterId && headingId && subheadingId) {\r\n      newState.children[chapterId].children[\r\n        headingId\r\n      ].childrenAllIdsOrder = newState.children[chapterId].children[\r\n        headingId\r\n      ].childrenAllIdsOrder.filter((id) => id !== subheadingId);\r\n      delete newState.children[chapterId].children[headingId].children[\r\n        subheadingId\r\n      ];\r\n    } else if (chapterId && headingId) {\r\n      newState.children[chapterId].childrenAllIdsOrder = newState.children[\r\n        chapterId\r\n      ].childrenAllIdsOrder.filter((id) => id !== headingId);\r\n      delete newState.children[chapterId].children[headingId];\r\n    } else if (chapterId) {\r\n      newState.childrenAllIdsOrder = newState.childrenAllIdsOrder.filter(\r\n        (id) => id !== chapterId\r\n      );\r\n      delete newState.children[chapterId];\r\n    }\r\n\r\n    setState({ ...newState });\r\n  };\r\n\r\n  const addStandard = (currentStandard, newStandard) => {\r\n    const newState = state;\r\n    const newId = Math.random();\r\n    if (currentStandard === \"CHAPTER\") {\r\n      newState.childrenAllIdsOrder = [...newState.childrenAllIdsOrder, newId];\r\n      newState.children[newId] = {\r\n        name: newStandard,\r\n        children: {},\r\n        childrenAllIdsOrder: [],\r\n      };\r\n    } else if (currentStandard === \"HEADING\") {\r\n      const getLastChapterId =\r\n        newState.childrenAllIdsOrder[newState.childrenAllIdsOrder.length - 1];\r\n\r\n      if (getLastChapterId) {\r\n        newState.children[getLastChapterId].childrenAllIdsOrder = [\r\n          ...newState.children[getLastChapterId].childrenAllIdsOrder,\r\n          newId,\r\n        ];\r\n        newState.children[getLastChapterId].children[newId] = {\r\n          name: newStandard,\r\n          children: {},\r\n          childrenAllIdsOrder: [],\r\n        };\r\n\r\n        setState({ ...newState });\r\n      } else {\r\n        alert(\"There Are no chapters. Please Add chapters.\");\r\n      }\r\n    } else if (currentStandard === \"SUBHEADING\") {\r\n      const getLastChapterId =\r\n        newState.childrenAllIdsOrder[newState.childrenAllIdsOrder.length - 1];\r\n\r\n      if (getLastChapterId) {\r\n        const getLastHeadingId =\r\n          newState.children[getLastChapterId].childrenAllIdsOrder[\r\n            newState.children[getLastChapterId].childrenAllIdsOrder.length - 1\r\n          ];\r\n\r\n        if (getLastHeadingId) {\r\n          const getLastHeadingChildren =\r\n            newState.children[getLastChapterId].children[getLastHeadingId];\r\n\r\n          getLastHeadingChildren.children[newId] = { name: newStandard };\r\n          getLastHeadingChildren.childrenAllIdsOrder = [\r\n            ...getLastHeadingChildren.childrenAllIdsOrder,\r\n            newId,\r\n          ];\r\n\r\n          setState({ ...newState });\r\n        } else {\r\n          alert(\"The is no Heading in the Chapter.\");\r\n        }\r\n      } else {\r\n        alert(\"There is no Chapter.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIndent = (chapterId, headingId, subHeadingId) => {\r\n    const newState = state;\r\n\r\n    if (chapterId && headingId && subHeadingId) {\r\n      alert(\"Maximum intend level reached.\");\r\n    } else if (chapterId && headingId) {\r\n      const { children, childrenAllIdsOrder } = newState.children[chapterId];\r\n      const { name } = children[headingId];\r\n\r\n      const getPreviousHeadingOrder =\r\n        childrenAllIdsOrder.findIndex((id) => id === headingId) - 1;\r\n\r\n      if (getPreviousHeadingOrder === -1) {\r\n        alert(\"Your Chapter is having no heading.\");\r\n      } else {\r\n        const takeAllHeadingIds = children[\r\n          headingId\r\n        ].childrenAllIdsOrder.splice(\r\n          0,\r\n          children[headingId].childrenAllIdsOrder.length\r\n        );\r\n\r\n        const previousHeadId = childrenAllIdsOrder[getPreviousHeadingOrder];\r\n\r\n        children[previousHeadId].children[headingId] = {\r\n          name,\r\n          children: {},\r\n          childrenAllIdsOrder: [],\r\n        };\r\n        /*\r\n         *   Merging the Children\r\n         */\r\n\r\n        children[previousHeadId].childrenAllIdsOrder = [\r\n          ...children[previousHeadId].childrenAllIdsOrder,\r\n          headingId,\r\n          ...takeAllHeadingIds,\r\n        ];\r\n\r\n        for (const i of takeAllHeadingIds) {\r\n          children[previousHeadId].children[i] = {\r\n            name: children[headingId].children[i].name,\r\n            children: {},\r\n            childrenAllIdsOrder: [],\r\n          };\r\n        }\r\n        delete children[headingId];\r\n\r\n        const newchildrenAllIdsOrder = childrenAllIdsOrder.filter(\r\n          (id) => id !== headingId\r\n        );\r\n\r\n        newState.children[\r\n          chapterId\r\n        ].childrenAllIdsOrder = newchildrenAllIdsOrder;\r\n\r\n        setState({ ...state });\r\n      }\r\n    } else if (chapterId) {\r\n      if (newState.childrenAllIdsOrder.length === 1) {\r\n        alert(\"One Chapter cannot be Subhead.\");\r\n      } else {\r\n        /**\r\n         * Moving from chapter\r\n         * to heading and making sub-heading\r\n         * */\r\n        const { name } = newState.children[chapterId];\r\n        const { children, childrenAllIdsOrder } = newState;\r\n\r\n        const getAllCurrentChapterId = children[chapterId].childrenAllIdsOrder;\r\n        const getBeforeChapterIndex =\r\n          childrenAllIdsOrder.findIndex((id) => id === chapterId) - 1;\r\n        const getBeforeChapterId = childrenAllIdsOrder[getBeforeChapterIndex];\r\n\r\n        children[getBeforeChapterId].children[chapterId] = {\r\n          name,\r\n          childrenAllIdsOrder: [],\r\n          children: {},\r\n        };\r\n\r\n        children[getBeforeChapterId].childrenAllIdsOrder = [\r\n          ...children[getBeforeChapterId].childrenAllIdsOrder,\r\n          chapterId,\r\n        ];\r\n\r\n        for (const i of getAllCurrentChapterId) {\r\n          children[getBeforeChapterId].childrenAllIdsOrder = [\r\n            ...children[getBeforeChapterId].childrenAllIdsOrder,\r\n            i,\r\n          ];\r\n          const childNamesOfHeading = children[chapterId].children[i].name;\r\n          children[getBeforeChapterId].children[i] = {\r\n            name: childNamesOfHeading,\r\n            children: {},\r\n            childrenAllIdsOrder: [],\r\n          };\r\n        }\r\n\r\n        const newchildrenAllIdsOrder = childrenAllIdsOrder.filter(\r\n          (id) => id !== chapterId\r\n        );\r\n        newState.childrenAllIdsOrder = newchildrenAllIdsOrder;\r\n        delete newState.children[chapterId];\r\n\r\n        setState({ ...newState });\r\n      }\r\n    }\r\n  };\r\n  const handleOutdent = (chapterId, headingId, subHeadingId) => {\r\n    const newState = state;\r\n    if (chapterId && headingId && subHeadingId) {\r\n      const { children, childrenAllIdsOrder } = newState.children[chapterId];\r\n      const { name } = newState.children[chapterId].children[\r\n        headingId\r\n      ].children[subHeadingId];\r\n\r\n      const findSubheadingIndex = children[\r\n        headingId\r\n      ].childrenAllIdsOrder.findIndex((id) => id === subHeadingId);\r\n\r\n      const extractRemainingSubHeadingIds = children[\r\n        headingId\r\n      ].childrenAllIdsOrder.splice(\r\n        findSubheadingIndex + 1,\r\n        children[headingId].childrenAllIdsOrder.length\r\n      );\r\n\r\n      children[subHeadingId] = {\r\n        children: {},\r\n        childrenAllIdsOrder: extractRemainingSubHeadingIds,\r\n      };\r\n\r\n      const subHeadingChildren = children[headingId].children;\r\n\r\n      children[subHeadingId].name = name;\r\n      for (const i of extractRemainingSubHeadingIds) {\r\n        children[subHeadingId].children[i] = {\r\n          name: subHeadingChildren[i].name,\r\n        };\r\n      }\r\n\r\n      ///REMOVING ALL ID OF SUBHEADING\r\n      for (const i of children[subHeadingId].childrenAllIdsOrder) {\r\n        delete children[headingId].children[i];\r\n      }\r\n      delete children[headingId].children[subHeadingId];\r\n      const findSubheadingIndexDelete = children[\r\n        headingId\r\n      ].childrenAllIdsOrder.findIndex((id) => id === subHeadingId);\r\n\r\n      children[headingId].childrenAllIdsOrder.splice(\r\n        findSubheadingIndexDelete,\r\n        1\r\n      );\r\n\r\n      const getHeadingIndex = childrenAllIdsOrder.findIndex(\r\n        (id) => id === headingId\r\n      );\r\n      childrenAllIdsOrder.splice(getHeadingIndex + 1, 0, subHeadingId);\r\n\r\n      setState({ ...newState });\r\n    } else if (chapterId && headingId) {\r\n      /* from heading\r\n       * to chapter\r\n       */\r\n      const { children, childrenAllIdsOrder } = newState;\r\n      const { name } = children[chapterId].children[headingId];\r\n      const findHeadingIndex = children[\r\n        chapterId\r\n      ].childrenAllIdsOrder.findIndex((id) => id === headingId);\r\n\r\n      if (\r\n        children[chapterId].children[headingId].childrenAllIdsOrder.length !== 0\r\n      ) {\r\n        alert(\"You have Sub-heading to settle.\");\r\n      } else if (findHeadingIndex + 1) {\r\n        const slicingChildren = children[chapterId].childrenAllIdsOrder.slice(\r\n          findHeadingIndex,\r\n          children[chapterId].childrenAllIdsOrder.length\r\n        );\r\n\r\n        slicingChildren.shift();\r\n\r\n        children[headingId] = {\r\n          name,\r\n          children: {},\r\n          childrenAllIdsOrder: slicingChildren,\r\n        };\r\n\r\n        for (const i of slicingChildren) {\r\n          children[headingId].children[i] = {\r\n            name: children[chapterId].children[i].name,\r\n            children: {},\r\n            childrenAllIdsOrder: [],\r\n          };\r\n        }\r\n\r\n        children[chapterId].childrenAllIdsOrder = children[\r\n          chapterId\r\n        ].childrenAllIdsOrder.slice(0, findHeadingIndex);\r\n\r\n        for (const i of slicingChildren) {\r\n          delete children[chapterId].children[i];\r\n        }\r\n        delete children[chapterId].children[headingId];\r\n\r\n        const getChapterIndex = childrenAllIdsOrder.findIndex(\r\n          (id) => id === chapterId\r\n        );\r\n        newState.childrenAllIdsOrder.splice(getChapterIndex + 1, 0, headingId);\r\n\r\n        setState({ ...newState });\r\n      } else {\r\n        alert(\"No heading but sub headings are there.\");\r\n      }\r\n    } else if (chapterId) {\r\n      alert(\"Maximum outdent level reached.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MyContext.Provider\r\n      value={{\r\n        state: state,\r\n        handleIndent,\r\n        handleOutdent,\r\n        HandleChangeStandard,\r\n        trashStandard,\r\n        addStandard,\r\n        getJSONData,\r\n        triggerDragDrop,\r\n      }}\r\n    >\r\n      <div className=\"App\">{children}</div>\r\n    </MyContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"./index.scss\";\r\nimport { MyContext } from \"../appContext\";\r\nexport default function HeaderButtons() {\r\n  const getConsumer = useContext(MyContext);\r\n  const { state, getJSONData } = getConsumer;\r\n\r\n  const handleFileChange = async (e) => {\r\n    const { name } = e.target.files[0];\r\n    if (name.endsWith(\".json\")) {\r\n      e.preventDefault();\r\n      const reader = new FileReader();\r\n      reader.onload = async (e) => {\r\n        const text = e.target.result;\r\n        getJSONData(JSON.parse(text));\r\n      };\r\n\r\n      reader.readAsText(e.target.files[0]);\r\n    } else {\r\n      alert(\r\n        \"It is not a JSON file. kindly Upload a file having .json extension.\"\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"header-buttons-wrapper\">\r\n      <span\r\n        className=\"upload-wrapper\"\r\n      >\r\n         <label htmlFor=\"fusk\">Load JSON</label>\r\n        <input\r\n          id=\"fusk\"\r\n          type=\"file\"\r\n          name=\"JSONFile\"\r\n          style={{ display: \"none\" }}\r\n          onChange={handleFileChange}\r\n        />\r\n      </span>{\" \"}\r\n      <a\r\n        className=\"save-wrapper\"\r\n        href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n          JSON.stringify(state)\r\n        )}`}\r\n        download=\"API.json\"\r\n      >\r\n        Save JSON\r\n      </a>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/right-arrow.f56c2e28.svg\";","export default __webpack_public_path__ + \"static/media/left-arrow.ec8a413d.svg\";","export default __webpack_public_path__ + \"static/media/move.aaf80333.svg\";","export default __webpack_public_path__ + \"static/media/trash.c5389bbd.svg\";","import React, { useContext, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport RightArrow from \"./svg/right-arrow.svg\";\r\nimport LeftArrow from \"./svg/left-arrow.svg\";\r\nimport Move from \"./svg/move.svg\";\r\nimport Trash from \"./svg/trash.svg\";\r\nimport { MyContext } from \"../appContext\";\r\n\r\nexport default function Index() {\r\n  const [currentIndent, setCurrentIndent] = useState(\"CHAPTER\");\r\n  const [newStandard, setNewStandard] = useState(\"\");\r\n  const getConsumer = useContext(MyContext);\r\n  const { subject, children, childrenAllIdsOrder } = getConsumer.state;\r\n  const { triggerDragDrop } = getConsumer;\r\n  const [dragOverIds, setDragOverIds] = useState([]);\r\n  const [dragStartIds, setDragStartIds] = useState([]);\r\n  const chapter = children;\r\n  const chapterAllIds = childrenAllIdsOrder;\r\n\r\n  const changeOutdentInput = () => {\r\n    if (currentIndent === \"SUBHEADING\") setCurrentIndent(\"HEADING\");\r\n    else if (currentIndent === \"HEADING\") setCurrentIndent(\"CHAPTER\");\r\n  };\r\n  const changeIndentInput = () => {\r\n    if (currentIndent === \"CHAPTER\") setCurrentIndent(\"HEADING\");\r\n    else if (currentIndent === \"HEADING\") setCurrentIndent(\"SUBHEADING\");\r\n  };\r\n\r\n  const handleDragOverIds = (ids) => {\r\n    setDragOverIds([...ids]);\r\n  };\r\n  const handleDragDropStartIds = (ids) => {\r\n    setDragStartIds([...ids]);\r\n  };\r\n  const dragDropEndHandler = () => {\r\n    if (dragOverIds.length !== dragStartIds.length) {\r\n      alert(\r\n        \"Parent element cannot be a chilren E.g Chapter cannot be Heading or Subheading.\"\r\n      );\r\n    } else {\r\n      triggerDragDrop(dragStartIds, dragOverIds);\r\n    }\r\n  };\r\n  const {\r\n    handleIndent,\r\n    handleOutdent,\r\n    HandleChangeStandard,\r\n    trashStandard,\r\n    addStandard,\r\n  } = getConsumer;\r\n\r\n  const setMarginLeft = (standardType) => {\r\n    const UNITS = \"em\";\r\n    if (standardType === \"CHAPTER\") return 0 + UNITS;\r\n    else if (standardType === \"HEADING\") return 1 + UNITS;\r\n    else if (standardType === \"SUBHEADING\") return 2 + UNITS;\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const handleStandardSummit = (event) => {\r\n    event.preventDefault();\r\n    addStandard(currentIndent, newStandard);\r\n    setNewStandard(\"\");\r\n  };\r\n  return (\r\n    <div className=\"curriculum-wrapper\">\r\n      <div className=\"subject-heading\">\r\n        <b>{subject}</b>\r\n      </div>\r\n      <div className=\"subjects-wrapper\">\r\n        <div className=\"subjects-heading\">\r\n          <div className=\"heading-wrapper\">\r\n            <div className=\"main-heading\">Actions</div>\r\n            <div className=\"sub-heading\">Move, Indent, Outdent, Delete</div>\r\n          </div>\r\n          <div className=\"heading-wrapper\">\r\n            <div className=\"main-heading\">Standard</div>\r\n            <div className=\"sub-heading\">The text of the standard</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"subject-body\">\r\n          {chapterAllIds.map((chapterId) => {\r\n            const { name } = chapter[chapterId];\r\n            const heading = chapter[chapterId].children;\r\n            const headingAllIds = chapter[chapterId].childrenAllIdsOrder;\r\n            return (\r\n              <div className=\"subject-box\" key={chapterId}>\r\n                <div className=\"subject-row\">\r\n                  <div\r\n                    className=\"subject-col\"\r\n                    onDragOver={() => {\r\n                      handleDragOverIds([chapterId]);\r\n                    }}\r\n                  >\r\n                    <div className=\"tooltip-wrapper\">\r\n                      <img\r\n                        className=\"cursor-pointer\" \r\n                        src={Move}\r\n                        alt=\"move\"\r\n                        onDragStart={() => {\r\n                          handleDragDropStartIds([chapterId]);\r\n                        }}\r\n                        onDragEnd={() => {\r\n                          dragDropEndHandler();\r\n                        }}\r\n                      />\r\n                      <span className=\"tooltiptext\">Move</span>\r\n                    </div>{\" \"}\r\n                    <div className=\"tooltip-wrapper\">\r\n                      <img\r\n                        className=\"cursor-pointer\"\r\n                        src={LeftArrow}\r\n                        alt=\"left indent\"\r\n                        onClick={() => {\r\n                          handleOutdent(chapterId);\r\n                        }}\r\n                      />\r\n                      <span className=\"tooltiptext\">Outdent</span>\r\n                    </div>{\" \"}\r\n                    <div className=\"tooltip-wrapper\">\r\n                      <img\r\n                        className=\"cursor-pointer\"\r\n                        src={RightArrow}\r\n                        alt=\"right indent\"\r\n                        onClick={() => {\r\n                          handleIndent(chapterId);\r\n                        }}\r\n                      />{\" \"}\r\n                      <span className=\"tooltiptext\">Indent</span>\r\n                    </div>\r\n                    <div className=\"tooltip-wrapper\">\r\n                      <img\r\n                        className=\"cursor-pointer\"\r\n                        src={Trash}\r\n                        alt=\"dustbin\"\r\n                        onClick={() => {\r\n                          trashStandard(chapterId);\r\n                          setCurrentIndent(\"CHAPTER\");\r\n                        }}\r\n                      />\r\n                      <span className=\"tooltiptext\">Delete</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"subject-col\">\r\n                    <div\r\n                      className=\"level\"\r\n                      style={{ marginLeft: `${setMarginLeft(\"CHAPTER\")}` }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"subject-col\">\r\n                    <input\r\n                      className=\"chapter\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(event) =>\r\n                        HandleChangeStandard(event, chapterId)\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"heading-box\">\r\n                  {headingAllIds.map((headingId) => {\r\n                    const { name } = heading[headingId];\r\n                    const subHeadingAllIds =\r\n                      heading[headingId].childrenAllIdsOrder;\r\n                    const subHeading = heading[headingId].children;\r\n                    return (\r\n                      <React.Fragment key={headingId}>\r\n                        <div className=\"heading-row\" key={headingId}>\r\n                          <div\r\n                            className=\"heading-col\"\r\n                            onDragOver={() => {\r\n                              handleDragOverIds([chapterId, headingId]);\r\n                            }}\r\n                          >\r\n                            <div className=\"tooltip-wrapper\">\r\n                              <img\r\n                                className=\"cursor-pointer\"\r\n                                src={Move}\r\n                                alt=\"move\"\r\n                                onDragStart={() => {\r\n                                  handleDragDropStartIds([\r\n                                    chapterId,\r\n                                    headingId,\r\n                                  ]);\r\n                                }}\r\n                                onDragEnd={() => {\r\n                                  dragDropEndHandler();\r\n                                }}\r\n                              />{\" \"}\r\n                              <span className=\"tooltiptext\">Move</span>\r\n                            </div>\r\n\r\n                            <div className=\"tooltip-wrapper\">\r\n                              <img\r\n                                className=\"cursor-pointer\"\r\n                                src={LeftArrow}\r\n                                alt=\"left arrow\"\r\n                                onClick={() => {\r\n                                  handleOutdent(chapterId, headingId);\r\n                                }}\r\n                              />{\" \"}\r\n                              <span className=\"tooltiptext\">Outdent</span>\r\n                            </div>\r\n                            <div className=\"tooltip-wrapper\">\r\n                              <img\r\n                                className=\"cursor-pointer\"\r\n                                src={RightArrow}\r\n                                alt=\"right arrow\"\r\n                                onClick={() => {\r\n                                  handleIndent(chapterId, headingId);\r\n                                }}\r\n                              />{\" \"}\r\n                              <span className=\"tooltiptext\">Indent</span>\r\n                            </div>\r\n                            <div className=\"tooltip-wrapper\">\r\n                              <img\r\n                                className=\"cursor-pointer\"\r\n                                src={Trash}\r\n                                alt=\"dustbin\"\r\n                                onClick={() => {\r\n                                  trashStandard(chapterId, headingId);\r\n                                  setCurrentIndent(\"HEADING\");\r\n                                }}\r\n                              />\r\n                              <span className=\"tooltiptext\">Delete</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"heading-col\">\r\n                            <div\r\n                              className=\"level\"\r\n                              style={{\r\n                                marginLeft: `${setMarginLeft(\"HEADING\")}`,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"heading-col\">\r\n                            <input\r\n                              className=\"heading\"\r\n                              type=\"text\"\r\n                              value={name}\r\n                              onChange={(event) =>\r\n                                HandleChangeStandard(\r\n                                  event,\r\n                                  chapterId,\r\n                                  headingId\r\n                                )\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"sub-heading-box\">\r\n                          {subHeadingAllIds &&\r\n                            subHeadingAllIds.map((subHeadingId) => {\r\n                              const { name } = subHeading[subHeadingId];\r\n                              return (\r\n                                <div\r\n                                  className=\"sub-heading-row\"\r\n                                  key={subHeadingId}\r\n                                >\r\n                                  <div\r\n                                    className=\"sub-heading-col\"\r\n                                    onDragOver={() => {\r\n                                      handleDragOverIds([\r\n                                        chapterId,\r\n                                        headingId,\r\n                                        subHeadingId,\r\n                                      ]);\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"tooltip-wrapper\">\r\n                                      <img\r\n                                        className=\"cursor-pointer\"\r\n                                        src={Move}\r\n                                        alt=\"move\"\r\n                                        onDragStart={() => {\r\n                                          handleDragDropStartIds([\r\n                                            chapterId,\r\n                                            headingId,\r\n                                            subHeadingId,\r\n                                          ]);\r\n                                        }}\r\n                                        onDragEnd={() => {\r\n                                          dragDropEndHandler();\r\n                                        }}\r\n                                      />{\" \"}\r\n                                      <span className=\"tooltiptext\">Move</span>\r\n                                    </div>\r\n                                    <div className=\"tooltip-wrapper\">\r\n                                      <img\r\n                                        className=\"cursor-pointer\"\r\n                                        src={LeftArrow}\r\n                                        alt=\"left arrow\"\r\n                                        onClick={() => {\r\n                                          handleOutdent(\r\n                                            chapterId,\r\n                                            headingId,\r\n                                            subHeadingId\r\n                                          );\r\n                                        }}\r\n                                      />{\" \"}\r\n                                      <span className=\"tooltiptext\">\r\n                                        Outdent\r\n                                      </span>\r\n                                    </div>\r\n                                    <div className=\"tooltip-wrapper\">\r\n                                      <img\r\n                                        className=\"cursor-pointer\"\r\n                                        src={RightArrow}\r\n                                        alt=\"right arrow\"\r\n                                        onClick={() =>\r\n                                          handleIndent(\r\n                                            chapterId,\r\n                                            headingId,\r\n                                            subHeadingId\r\n                                          )\r\n                                        }\r\n                                      />{\" \"}\r\n                                      <span className=\"tooltiptext\">\r\n                                        Indent\r\n                                      </span>\r\n                                    </div>\r\n                                    <div className=\"tooltip-wrapper\">\r\n                                      <img\r\n                                        className=\"cursor-pointer\"\r\n                                        src={Trash}\r\n                                        alt=\"dustbin\"\r\n                                        onClick={() => {\r\n                                          trashStandard(\r\n                                            chapterId,\r\n                                            headingId,\r\n                                            subHeadingId\r\n                                          );\r\n                                          setCurrentIndent(\"SUBHEADING\");\r\n                                        }}\r\n                                      />\r\n                                      <span className=\"tooltiptext\">\r\n                                        Delete\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"sub-heading-col\">\r\n                                    <div\r\n                                      className=\"level\"\r\n                                      style={{\r\n                                        marginLeft: `${setMarginLeft(\r\n                                          \"SUBHEADING\"\r\n                                        )}`,\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"sub-heading-col\">\r\n                                    <input\r\n                                      className=\"sub-heading\"\r\n                                      type=\"text\"\r\n                                      value={name}\r\n                                      onChange={(event) =>\r\n                                        HandleChangeStandard(\r\n                                          event,\r\n                                          chapterId,\r\n                                          headingId,\r\n                                          subHeadingId\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"enter-standard\">\r\n        <form onSubmit={handleStandardSummit}>\r\n          <div className=\"standard-row\">\r\n            <div className=\"standard-col\">\r\n              <div className=\"tooltip-wrapper\">\r\n                <img className=\"cursor-pointer\" src={Move} alt=\"move\" />\r\n                <span className=\"tooltiptext\">Move</span>\r\n              </div>{\" \"}\r\n              <div className=\"tooltip-wrapper\">\r\n                <img\r\n                  className=\"cursor-pointer\"\r\n                  src={LeftArrow}\r\n                  alt=\"left arrow\"\r\n                  onClick={() => changeOutdentInput()}\r\n                />{\" \"}\r\n                <span className=\"tooltiptext\">Outdent</span>\r\n              </div>{\" \"}\r\n              <div className=\"tooltip-wrapper\">\r\n                <img\r\n                  className=\"cursor-pointer\"\r\n                  src={RightArrow}\r\n                  alt=\"right arrow\"\r\n                  onClick={() => changeIndentInput()}\r\n                />{\" \"}\r\n                <span className=\"tooltiptext\">Indent</span>\r\n              </div>{\" \"}\r\n              <div className=\"tooltip-wrapper\">\r\n                <img\r\n                  className=\"cursor-pointer\"\r\n                  src={Trash}\r\n                  alt=\"dustbin\"\r\n                  onClick={() => trashStandard()}\r\n                />\r\n                <span className=\"tooltiptext\">Delete</span>\r\n              </div>{\" \"}\r\n            </div>\r\n            <div className=\"standard-col\">\r\n              <div\r\n                className=\"level\"\r\n                style={{ marginLeft: `${setMarginLeft(currentIndent)}` }}\r\n              />\r\n            </div>\r\n            <div className=\"standard-col\">\r\n              <input\r\n                className={\r\n                  currentIndent === \"CHAPTER\"\r\n                    ? \"chapter\"\r\n                    : currentIndent === \"HEADING\"\r\n                    ? \"heading\"\r\n                    : \"sub-heading\"\r\n                }\r\n                type=\"text\"\r\n                placeholder=\"Type standard here (eg. Numbers ...)\"\r\n                required\r\n                autoFocus\r\n                value={newStandard}\r\n                onChange={(e) => setNewStandard(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" className=\"add-standard\">\r\n            &#10010; Add a standard \r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport ContextWrapper from \"./appContext\";\nimport HeaderButtons from \"./HeaderButtons\";\nimport Curriculum from \"./Curriculum\";\n\nfunction App() {\n  return (\n    <ContextWrapper>\n      <Curriculum />\n      <HeaderButtons />\n    </ContextWrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}